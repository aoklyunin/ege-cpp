#include <iostream>
#include <fstream>

// главный метод программы
int main() {
    // открываем файл
    std::ifstream myfile;
    // бинарник собирается в отдельной папке, поэтому относительный путь такой
    // можно вместо этого закинуть файл куда-нибудь на диск и указать полный путь
    myfile.open("../problem24/k7-9.txt");
    // читаем строку файла
    std::string in;
    myfile >> in;
    // закрываем файл
    myfile.close();


    // кол-во подряд идущих различных отличных от соседей символов
    // изначально длина такой последовательности равна 0
    int cnt = 0;
    // масимальная длина тоде равна 0
    int maxCnt = 0;
    // перебираем все индексы
    for (int i = 0; i < in.length(); i++) {
        // если строка с позиции i начинается на ABC
        if (in[i] == 'A' && in[i + 1] == 'B' && in[i + 2] == 'C') {
            // смещаемся на два дополнительных знака
            i += 2;
            // увеличиваем количество на 3
            cnt+=3;
        } else { // если текущий символ такой же, как и следующий
            // если количество подряд идущих различных символов
            // больше максимального
            if (cnt > maxCnt) {
                // сохраняем новое максимальное количество
                maxCnt = cnt;
            }
            // сбрасываем кол-во подряд идущих различных символов
            cnt = 0;
        }
    }
    // !не забудьте проверить последнее количество различных символов
    // потому что последний символ мог тоже отличаться, и тогда
    // внутри цикла проверку длины его последовательности с максимальной
    // выполнена не будет, ведь она срабатывает только
    // если мы встречаем первый повторяющийся символ
    if (cnt > maxCnt) {
        // сохраняем новое максимальное количество
        maxCnt = cnt;
    }
    // выводим максимальное количество
    std::cout << maxCnt << std::endl;


    return 0;
}


