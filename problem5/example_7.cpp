#include <iostream>
#include <vector>

// получить массив цифр числа
std::vector<int> getDigits(int n) {
    std::vector<int> d;
    // номер читаемого разряда
    int r = 0;
    // пока есть хотя бы одна цифра в числе
    while (n > 0) {
        // получаем цифру младшего разряда
        d.push_back(n % 16);
        // увеличиваем номер текущего разряда
        r++;
        // отбрасываем младший разряд числа
        n /= 16;
    }
    return d;
}


// главный метод программы
int main() {

    // перебираем все числа, которые в шетнадцатеричной
    // системе будут представлены двумя цифрами
    // первое число - это 10, последнее - FF
    for (int n1 = 16; n1 < 256; n1++) {
        std::vector<int> d1 = getDigits(n1);
        // если одна из цифр больше семи,
        if (d1[0] > 6 || d1[1] > 6)
            // переходим к следующему шагу цикла
            continue;
        for (int n2 = 16; n2 < 256; n2++) {
            // получаем массив цифр первого числа
            std::vector<int> d2 = getDigits(n2);
            // если одна из цифр больше семи,
            if (d2[0] > 6 || d2[1] > 6)
                // переходим к следующему шагу цикла
                continue;

            // рассчитываем поразрядные суммы
            int s1 = d1[0] + d2[0];
            int s2 = d1[1] + d2[1];


            int res;
            // формируем число так, чтобы суммы шли в порядке невозрастания
            // т.к. обе цифры не больше шести, то их сумма точно займёт всего один разряд
            // в шестнадцатеричном представлении
            if (s1 > s2)
                res = s2 * 16 + s1;
            else
                res = s1 * 16 + s2;

            // создаём строку с двоичным представлением перебираемого значения
            char p[17];
            // отправляем в буфер p строковое представление числа с заданным основанием
            itoa(res, p, 16);
            // создаём строку на основе буффера
            std::string answ(p);
            // если результат равен одному из заданных, выведем его
            if (answ == "9f" || answ == "911" || answ == "42" || answ == "7a")
                // перехожим на новую строку
                std::cout << answ << std::endl;
        }
    }

    return 0;
}

