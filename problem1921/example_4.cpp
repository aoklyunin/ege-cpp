#include <iostream>

// декларируем метод хода второго игрока
bool player2(int s, int step);

// ход Пети, результат отвечает на вопрос, удовлетворяется ли
// требование задачи, s - кол-во камней в куче, step - номер хода
bool player1(int s, int step) {
    // если это первый ход Пети, тогда Ваня пока что
    // не сделал ни одного хода
    if (step == 1) {
        // перебираем разные ходы Пети, нас устроит если хотя бы один
        // приведёт к выигрышу, поэтому используем ИЛИ
        // часть этих ходов может оказаться неудачной,
        // обработка этих ходов вернёт true
        // и в итоге приведёт к победе Вани
        return player2(s + 1, step) ||
               player2(s + 4, step) ||
               player2(s * 2, step);
    } else { // если это второй ход Пети, Ваня ужк сделал первый ход
        // если сумма больше 77, то Ваня победил, условие
        // задачи выполнено
        return s >= 52;
    }

}

// ход Вани, результат отвечает на вопрос, удовлетворяется ли
// требование задачи второго хода Вани не предполагается, поэтому
// этот метод вызовется только для первого хода,
// s - кол-во камней в куче, step - номер хода
bool player2(int s, int step) {
    // перебираем разные ходы Вани, нас устроит если хотя бы один
    // приведёт к выигрышу, поэтому используем ИЛИ
    return player1(s + 1, step + 1) ||
           player1(s + 4, step + 1) ||
           player1(s * 2, step + 1);
}

// главный метод программы
int main() {
    // перебираем кол-во камней в куче
    for (int s = 1; s < 51; s++) {
        // запускаем обработку первого шага Пети, если
        // нас устраивает результат,
        if (player1(s, 1)) {
            // выводим кол-во камней во второй куче
            std::cout << s << std::endl;
            // завершаем цикл
            break;
        }
    }
    return 0;
}


