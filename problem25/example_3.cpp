#include <iostream>
#include <cmath>

// Проверка числа a на простоту, возвращает true, если число простое
// false - если нет
bool isPrime(int a) {
    // перебираем все числа от 2 до корня
    for (int i = 2; i < std::sqrt(a) + 1; i++) {
        // если a делится на i
        if (a % i == 0)
            // число составное
            return false;
    }
    // если не нашли ни одного делителя, число - простое
    return true;
}


// главный метод программы
int main() {
    // кол-во найденных чисел изначально равно 0
    int cnt = 0;
    // перебираем числа от 800000 до очень большого, я просто умножил на 10 исходное
    // если не хватит, просто увеличьте верхнюю границу перебора
    for (int i = 800000; i <= 8000000; i++) {
        // если число простое
        if (isPrime(i))
            // переходим к следующему шагу цикла
            continue;

        // минимальный делитель, изначально равен -1
        int minD = -1;
        // максимальный делитель
        int maxD = 1;
        // перебираем числа от [2;i-1]
        for (int d = 2; d < i; d++) {
            // если d - делитель i
            if (i % d == 0) {
                // если не найдено ни одного делителя
                if (minD == -1)
                    // сохраняем первый(минимальный) делитель
                    minD = d;

                // т.к. мы перебираем делители в порядке возрастания,
                // то последний сохранённый будет максимальным
                maxD = d;
            }
        }

        // если строка - палиндром
        if ((minD + maxD) % 138 == 0) {
            // выводим число, выводим
            std::cout << i << " " << minD + maxD << std::endl;
            // увеличиваем кол-во найденных чисел на 1
            cnt++;
            // если найдено пять и больше
            if (cnt >= 5)
                // завершаем цикл
                break;
        }
    }
    return 0;
}


